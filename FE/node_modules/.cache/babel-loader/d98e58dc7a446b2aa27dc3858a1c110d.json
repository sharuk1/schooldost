{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useRef, useEffect } from 'react';\nimport axios from \"axios\";\nexport const useHttpClient = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const activeHttpRequests = useRef([]);\n  const sendRequest = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setIsLoading(true);\n    const httpAbortCtrl = axios.CancelToken.source();\n    activeHttpRequests.current.push(httpAbortCtrl);\n    let axiosOptions = {\n      url: url,\n      method: method,\n      headers: headers,\n      cancelToken: httpAbortCtrl.token,\n      withCredentials: true\n    };\n\n    if (body !== null) {\n      axiosOptions.data = body;\n    }\n\n    try {\n      const response = await axios(axiosOptions);\n      activeHttpRequests.current = activeHttpRequests.current.filter(reqCtrl => reqCtrl !== httpAbortCtrl);\n      console.log(response);\n\n      if (response.status !== 200) {\n        console.log(response);\n        throw new Error(response);\n      }\n\n      setIsLoading(false);\n      return response;\n    } catch (err) {\n      setError(err);\n      setIsLoading(false);\n      throw err;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.cancel());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};\n\n_s(useHttpClient, \"5LFg9Ro/5iGJ4ehzHD/qJSt5Ojo=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","axios","useHttpClient","isLoading","setIsLoading","error","setError","activeHttpRequests","sendRequest","url","method","body","headers","httpAbortCtrl","CancelToken","source","current","push","axiosOptions","cancelToken","token","withCredentials","data","response","filter","reqCtrl","console","log","status","Error","err","clearError","forEach","abortCtrl","cancel"],"sources":["/sharuk/schooldost-fe/schooldost/FE/src/Hooks/HttpHook.js"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\nimport axios from \"axios\"\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(\n        async (url, method = 'GET', body = null, headers = {}) => {\n            setIsLoading(true);\n            const httpAbortCtrl = axios.CancelToken.source();\n            activeHttpRequests.current.push(httpAbortCtrl);\n            let axiosOptions={\n                url: url,\n                method: method,\n                headers: headers,\n                cancelToken: httpAbortCtrl.token,\n                withCredentials: true\n            }\n            if(body!==null){\n                axiosOptions.data=body\n            }\n            \n            try {\n                const response = await axios(axiosOptions); \n                activeHttpRequests.current = activeHttpRequests.current.filter(\n                    reqCtrl => reqCtrl !== httpAbortCtrl\n                );\n                console.log(response);\n                if (response.status !== 200) {\n                    console.log(response);\n                    throw new Error(response);\n\n                }\n\n                setIsLoading(false);\n                return response;\n            } catch (err) {\n                setError(err);\n                setIsLoading(false);\n                throw err;\n            }\n        },\n        []\n    );\n\n    const clearError = () => {\n        setError(null);\n    };\n\n    useEffect(() => {\n        return () => {\n        \n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.cancel());\n        };\n    }, []);\n\n    return { isLoading, error, sendRequest, clearError };\n};\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwCC,SAAxC,QAAyD,OAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;EAEA,MAAMU,kBAAkB,GAAGR,MAAM,CAAC,EAAD,CAAjC;EAEA,MAAMS,WAAW,GAAGV,WAAW,CAC3B,gBAAOW,GAAP,EAA0D;IAAA,IAA9CC,MAA8C,uEAArC,KAAqC;IAAA,IAA9BC,IAA8B,uEAAvB,IAAuB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACtDR,YAAY,CAAC,IAAD,CAAZ;IACA,MAAMS,aAAa,GAAGZ,KAAK,CAACa,WAAN,CAAkBC,MAAlB,EAAtB;IACAR,kBAAkB,CAACS,OAAnB,CAA2BC,IAA3B,CAAgCJ,aAAhC;IACA,IAAIK,YAAY,GAAC;MACbT,GAAG,EAAEA,GADQ;MAEbC,MAAM,EAAEA,MAFK;MAGbE,OAAO,EAAEA,OAHI;MAIbO,WAAW,EAAEN,aAAa,CAACO,KAJd;MAKbC,eAAe,EAAE;IALJ,CAAjB;;IAOA,IAAGV,IAAI,KAAG,IAAV,EAAe;MACXO,YAAY,CAACI,IAAb,GAAkBX,IAAlB;IACH;;IAED,IAAI;MACA,MAAMY,QAAQ,GAAG,MAAMtB,KAAK,CAACiB,YAAD,CAA5B;MACAX,kBAAkB,CAACS,OAAnB,GAA6BT,kBAAkB,CAACS,OAAnB,CAA2BQ,MAA3B,CACzBC,OAAO,IAAIA,OAAO,KAAKZ,aADE,CAA7B;MAGAa,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;MACA,IAAIA,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;QACzBF,OAAO,CAACC,GAAR,CAAYJ,QAAZ;QACA,MAAM,IAAIM,KAAJ,CAAUN,QAAV,CAAN;MAEH;;MAEDnB,YAAY,CAAC,KAAD,CAAZ;MACA,OAAOmB,QAAP;IACH,CAdD,CAcE,OAAOO,GAAP,EAAY;MACVxB,QAAQ,CAACwB,GAAD,CAAR;MACA1B,YAAY,CAAC,KAAD,CAAZ;MACA,MAAM0B,GAAN;IACH;EACJ,CAnC0B,EAoC3B,EApC2B,CAA/B;;EAuCA,MAAMC,UAAU,GAAG,MAAM;IACrBzB,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIAN,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MAET;MACAO,kBAAkB,CAACS,OAAnB,CAA2BgB,OAA3B,CAAmCC,SAAS,IAAIA,SAAS,CAACC,MAAV,EAAhD;IACH,CAJD;EAKH,CANQ,EAMN,EANM,CAAT;EAQA,OAAO;IAAE/B,SAAF;IAAaE,KAAb;IAAoBG,WAApB;IAAiCuB;EAAjC,CAAP;AACH,CA1DM;;GAAM7B,a"},"metadata":{},"sourceType":"module"}
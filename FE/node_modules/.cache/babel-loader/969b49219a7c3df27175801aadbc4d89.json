{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../_reducers';\nconst loggerMiddleware = createLogger();\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware)); // import { applyMiddleware, createStore } from \"redux\"\n//\n// import { createLogger } from 'redux-logger'\n// import thunk from \"redux-thunk\"\n// import promise from \"redux-promise-middleware\"\n//\n// import rootReducer from '../_reducers';\n//\n// const middleware = applyMiddleware(promise(), thunk, createLogger())\n//\n// export const store = createStore(rootReducer, middleware);","map":{"version":3,"names":["createStore","applyMiddleware","thunkMiddleware","createLogger","rootReducer","loggerMiddleware","store"],"sources":["/sharuk/schooldost-fe/schooldost-fe/src/_helpers/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../_reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);\n\n// import { applyMiddleware, createStore } from \"redux\"\n//\n// import { createLogger } from 'redux-logger'\n// import thunk from \"redux-thunk\"\n// import promise from \"redux-promise-middleware\"\n//\n// import rootReducer from '../_reducers';\n//\n// const middleware = applyMiddleware(promise(), thunk, createLogger())\n//\n// export const store = createStore(rootReducer, middleware);\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,MAAMC,gBAAgB,GAAGF,YAAY,EAArC;AAEA,OAAO,MAAMG,KAAK,GAAGN,WAAW,CAC5BI,WAD4B,EAE5BH,eAAe,CACXC,eADW,EAEXG,gBAFW,CAFa,CAAzB,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}